{# Mostly copied from https://github.com/doctrine/DoctrineBundle/blob/2.5.x/Resources/views/Collector/db.html.twig. #}
{% extends '@WebProfiler/Profiler/layout.html.twig' %}

{% block toolbar %}
    {% if collector.querycount > 0 %}
        {% set icon %}
            {{ include('amp sql profiler/db.svg') }}
            <span class="sf-toolbar-value">{{ collector.querycount }}</span>
            <span class="sf-toolbar-info-piece-additional-detail">
                <span class="sf-toolbar-label">in</span>
                <span class="sf-toolbar-value">{{ '%0.2f'|format(collector.time * 1000) }}</span>
                <span class="sf-toolbar-label">ms</span>
            </span>
        {% endset %}

        {# The content displayed when hovering the mouse over the toolbar panel. #}
        {% set text %}
            <div class="sf-toolbar-info-piece">
                <b>Database Queries</b>
                <span class="sf-toolbar-status {{ collector.querycount > 50 ? 'sf-toolbar-status-yellow' : '' }}">
                    {{ collector.querycount }}
                </span>
            </div>
            <div class="sf-toolbar-info-piece">
                <b>Query time</b>
                <span>{{ '%0.2f'|format(collector.time * 1000) }} ms</span>
            </div>
        {% endset %}

        {{ include('@WebProfiler/Profiler/toolbar_item.html.twig', { link: profiler_url }) }}
    {% endif %}
{% endblock %}

{% block menu %}
    <span class="label {{ collector.querycount == 0 ? 'disabled' }}">
        <span class="icon">{{ include('amp sql profiler/db.svg') }}</span>
        <strong>Amp SQL</strong>
        <span class="count">{{ collector.querycount }}</span>
    </span>
{% endblock %}

{% block panel %}
<h2>Query Metrics</h2>

<div class="metrics">
    <div class="metric">
        <span class="value">{{ collector.querycount }}</span>
        <span class="label">Database Queries</span>
    </div>

    <div class="metric">
        <span class="value">{{ '%0.2f'|format(collector.time * 1000) }} ms</span>
        <span class="label">Query time</span>
    </div>
</div>

{% if collector.querycount == 0 %}
<div class="empty">
    <p>No database queries were performed.</p>
</div>
{% else %}
<table class="alt queries-table">
    <thead>
    <tr>
        <th onclick="sortTable(this, 0, 'queries-0')" data-sort-direction="-1" style="cursor: pointer;">
            #<span class="text-muted">&#9650;</span>
        </th>
        <th class="nowrap" onclick="sortTable(this, 1, 'queries-0')" style="cursor: pointer;">Time<span></span></th>
        <th style="width: 100%;">Info</th>
    </tr>
    </thead>
    <tbody id="queries-0">
        {% for query in collector.queries %}
        <tr id="queryNo-{{ loop.index }}">
            <td class="nowrap">{{ loop.index }}</td>
            <td class="nowrap">{{ '%0.2f'|format(query.executionMS * 1000) }}&nbsp;ms</td>
            <td>
                <pre>{{ query.sql }}</pre>

                <div>
                    <strong class="font-normal text-small">Parameters</strong>: {{ profiler_dump(query.params, 2) }}
                </div>

                <div class="text-small font-normal">
                    <a href="#" class="sf-toggle link-inverse"
                        data-toggle-selector="#backtrace-{{ loop.index }}"
                        data-toggle-alt-content="Hide query backtrace">View query backtrace</a>
                </div>

                <div id="backtrace-{{ loop.index }}" class="hidden">
                    <table>
                        <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">File/Call</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for trace in query.backtrace %}
                                <tr>
                                    <td>{{ loop.index }}</td>
                                    <td>
                                        <span class="text-small">
                                            {% set line_number = trace.line|default(1) %}
                                            {% if trace.file is defined %}
                                                <a href="{{ trace.file|file_link(line_number) }}">
                                            {% endif %}
                                                {{- trace.class is defined ? trace.class ~ trace.type|default('::') -}}
                                                <span class="status-warning">{{ trace.function }}</span>
                                            {%- if trace.file is defined -%}
                                                </a>
                                            {% endif %}
                                            (line {{ line_number }})
                                        </span>
                                    </td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            </td>
        </tr>
        {% endfor %}
    </tbody>

    <script type="text/javascript">//<![CDATA[
        "use strict";

        function sortTable(header, column, targetId) {
            const direction = parseInt(header.getAttribute('data-sort-direction')) || 1,
                items = [],
                target = document.getElementById(targetId),
                rows = target.children,
                headers = header.parentElement.children;

            for (let i = 0; i < rows.length; ++i) {
                items.push(rows[i]);
            }

            for (let i = 0; i < headers.length; ++i) {
                headers[i].removeAttribute('data-sort-direction');
                if (headers[i].children.length > 0) {
                    headers[i].children[0].innerHTML = '';
                }
            }

            header.setAttribute('data-sort-direction', (-1*direction).toString());
            header.children[0].innerHTML = direction > 0
                ? '<span class="text-muted">&#9650;</span>'
                : '<span class="text-muted">&#9660;</span>'
            ;

            items.sort(function(a, b) {
                return direction
                    * (parseFloat(a.children[column].innerHTML)
                    - parseFloat(b.children[column].innerHTML))
                ;
            });

            for (let i = 0; i < items.length; ++i) {
                Sfjs.removeClass(items[i], i % 2 ? 'even' : 'odd');
                Sfjs.addClass(items[i], i % 2 ? 'odd' : 'even');
                target.appendChild(items[i]);
            }
        }
    //]]></script>
</table>
{% endif %}
{% endblock %}
